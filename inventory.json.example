{
  "credentials": [
    {
      "id": "cred-sample",
      "type": "ssh-key",
      "privateKeyPath": "C:/Users/your-username/.ssh/id_ed25519",
      "passphrase": null,
      "password": null,
      "useAgent": false
    }
  ],
  "servers": [
    {
      "id": "api-prod-1",
      "name": "API Prod 1",
      "env": "prod",
      "ssh": { "host": "127.0.0.1", "port": 22, "user": "ubuntu", "credentialId": "cred-sample" },
      "services": [
        { "id": "api-http", "type": "http", "name": "API", "url": "http://127.0.0.1:8080/health", "expectStatus": 200, "timeoutMs": 2000 },
        { "id": "api-json", "type": "httpJson", "name": "API JSON", "url": "http://127.0.0.1:8080/health", "timeoutMs": 2000, "rules": [
          { "name": "ok flag", "path": "$.ok", "equals": true },
          { "name": "version exists", "path": "$.version", "exists": true }
        ] },
        { "id": "nginx", "type": "systemd", "name": "nginx", "service": "nginx", "timeoutMs": 3000 },
        { "id": "redis", "type": "tcp", "name": "redis", "host": "127.0.0.1", "port": 6379, "timeoutMs": 1500 },
        { "id": "pg", "type": "sshCommand", "name": "postgres", "command": "pg_isready", "okPattern": "accepting connections", "timeoutMs": 3000 },
        { "id": "tls-google", "type": "tls", "name": "google tls", "host": "google.com", "port": 443, "minDaysLeft": 7 },
        { "id": "docker-api", "type": "dockerContainer", "name": "api-container", "container": "api" }
      ]
    },
    {
      "id": "test-1",
      "name": "Test Box",
      "env": "test",
      "ssh": { "host": "127.0.0.1", "port": 22, "user": "ubuntu", "credentialId": "cred-sample" },
      "services": [
        { "id": "web", "type": "http", "name": "Web", "url": "http://127.0.0.1:80/", "expectStatus": 200, "timeoutMs": 2000 }
      ]
    },
    {
      "id": "example-server",
      "name": "Example Server",
      "env": "prod",
      "ssh": { "host": "example.com", "port": 22, "user": "username", "credentialId": "cred-sample" },
      "services": [
        { "id": "web-service", "type": "http", "name": "Web Service", "url": "http://example.com:3000", "expectStatus": 200, "timeoutMs": 3000 },
        { "id": "api-service", "type": "http", "name": "API Service", "url": "http://example.com:3001", "expectStatus": 200, "timeoutMs": 3000 },
        { "id": "docker-service", "type": "dockerContainer", "name": "Docker Service", "container": "service-name", "timeoutMs": 3000 }
      ]
    }
  ],
  "poll": { "intervalSec": 15, "concurrency": 6 }
}
